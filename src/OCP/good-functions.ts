// ‚úÖ –•–û–†–û–®–û: –°–æ–±–ª—é–¥–µ–Ω–∏–µ OCP - –æ—Ç–∫—Ä—ã—Ç –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è, –∑–∞–∫—Ä—ã—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
//
// üìã –û–°–ù–û–í–ù–ê–Ø –ò–î–ï–Ø OCP:
// 1. ‚úÖ –ó–ê–ö–†–´–¢ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è - —Ç–∏–ø –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –º–µ–Ω—è—é—Ç—Å—è –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö —Ñ–∏–≥—É—Ä
// 2. ‚úÖ –û–¢–ö–†–´–¢ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è - –Ω–æ–≤—ã–µ —Ñ–∏–≥—É—Ä—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
// 3. ‚úÖ –ü–û–õ–ò–ú–û–†–§–ò–ó–ú - –æ–¥–∏–Ω —Ç–∏–ø, —Ä–∞–∑–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
// 4. ‚úÖ –ê–ë–°–¢–†–ê–ö–¶–ò–ò - –∫–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–∏–ø–æ–º ShapeData, –∞ –Ω–µ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏
//
// ‚ú® –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:
// 1. –ó–ê–ö–†–´–¢ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è - —Ç–∏–ø –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –º–µ–Ω—è—é—Ç—Å—è –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö —Ñ–∏–≥—É—Ä
// 2. –û–¢–ö–†–´–¢ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è - –Ω–æ–≤—ã–µ —Ñ–∏–≥—É—Ä—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
// 3. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –∏ —Ñ—É–Ω–∫—Ü–∏–π –≤–º–µ—Å—Ç–æ –∫–ª–∞—Å—Å–æ–≤
// 4. –õ–µ–≥–∫–æ—Å—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - —Ç–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ —Ñ–∞–±—Ä–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
// 5. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - –Ω–µ—Ç —Ä–∏—Å–∫–∞ —Å–ª–æ–º–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª

// ‚úÖ OCP: –ë–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ñ–∏–≥—É—Ä—ã - –ó–ê–ö–†–´–¢ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –≠—Ç–æ—Ç —Ç–∏–ø –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö —Ñ–∏–≥—É—Ä
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –°—Ç–∞–±–∏–ª—å–Ω–∞—è –æ—Å–Ω–æ–≤–∞ –¥–ª—è –≤—Å–µ—Ö —Ñ–∏–≥—É—Ä
interface ShapeData {
    calculateArea: () => number;
    calculatePerimeter: () => number;
};

//–†–∞—Å—à–∏—Ä—è–µ–º –±–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∫—Ä—É–≥–∞
interface CircleShapeData extends ShapeData {
    radius: number;
}

//–†–∞—Å—à–∏—Ä—è–µ–º –±–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
interface RectangleShapeData extends ShapeData {
    width: number;
    height: number;
}

// ‚úÖ OCP: –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ–∞–±—Ä–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ - –û–¢–ö–†–´–¢–´ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –ö–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ ShapeData –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–¥–∞
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –õ–µ–≥–∫–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ç–∏–ø–æ–≤


function createCircle(radius: number): CircleShapeData {
    return {
        calculateArea: () => Math.PI * radius * radius,
        calculatePerimeter: () => 2 * Math.PI * radius,
        radius
    };
}

function createRectangle(width: number, height: number): RectangleShapeData {
    return {
        calculateArea: () => width * height,
        calculatePerimeter: () => 2 * (width + height),
        width,
        height
    };
}

// ‚úÖ OCP: –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ - –ó–ê–ö–†–´–¢–ê –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è, —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ —Ñ–∏–≥—É—Ä–∞–º–∏
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ù–ò–ö–û–ì–î–ê –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö —Ñ–∏–≥—É—Ä!
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –û–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–∏–ø–æ–º ShapeData, –∞ –Ω–µ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ —Ñ–∏–≥—É—Ä
function processShape(shape: ShapeData): {area: number, perimeter: number} {
    // ‚úÖ OCP: –†–∞–±–æ—Ç–∞–µ–º —Å –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–µ–π ShapeData
    // üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –ù–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø —Ñ–∏–≥—É—Ä—ã
    // üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    const area = shape.calculateArea();
    const perimeter = shape.calculatePerimeter();
    
    return {area, perimeter};
}

// ‚úÖ OCP: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ - —Ç–æ–∂–µ –ó–ê–ö–†–´–¢–ê –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–æ–∂–µ –ù–ò–ö–û–ì–î–ê –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö —Ñ–∏–≥—É—Ä!
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –†–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏ —Ç–∏–ø–∞ ShapeData
function processShapes(shapes: ShapeData[]): void {
    shapes.forEach(shape => processShape(shape));
}

// ‚úÖ OCP: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ - –Ω–æ–≤—ã–µ —Ñ–∏–≥—É—Ä—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –ª—é–±—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏ —Ç–∏–ø–∞ ShapeData
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ì–∏–±–∫–æ—Å—Ç—å –∏ —Ä–∞—Å—à–∏—Ä—è–µ–º–æ—Å—Ç—å
const circle = createCircle(5);
const rectangle = createRectangle(4, 6);

// ‚úÖ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø: –ú–æ–∂–µ–º –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–∏–≥—É—Ä—ã –∏ –≤—Å–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–¥–∞
processShapes([circle, rectangle]);
// –ò–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–æ-–æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
processShape(circle);
processShape(rectangle);

export {}