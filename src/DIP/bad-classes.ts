// ‚ùå –ü–õ–û–•–û: –ù–∞—Ä—É—à–µ–Ω–∏–µ DIP - –∫–ª–∞—Å—Å—ã –∑–∞–≤–∏—Å—è—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π, –∞ –Ω–µ –æ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–π
//
// üîÑ –ù–ê–†–£–®–ï–ù–ò–ï –û–°–ù–û–í–ù–û–ô –ò–î–ï–ò DIP:
// 1. ‚ùå –í–´–°–û–ö–û–£–†–û–í–ù–ï–í–´–ï –ú–û–î–£–õ–ò –ó–ê–í–ò–°–Ø–¢ –û–¢ –ù–ò–ó–ö–û–£–†–û–í–ù–ï–í–´–•
//    - BadShapeCalculator (–≤—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π) –∑–∞–≤–∏—Å–∏—Ç –æ—Ç Circle, Rectangle, Triangle (–Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ)
//    - BadShapeCalculator —Å–æ–∑–¥–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã: new Circle(), new Rectangle(), new Triangle()
//
// 2. ‚ùå –ù–ï –û–ë–ê –¢–ò–ü–ê –ó–ê–í–ò–°–Ø–¢ –û–¢ –ê–ë–°–¢–†–ê–ö–¶–ò–ô
//    - –í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ –º–æ–¥—É–ª–∏: BadShapeCalculator –∑–∞–≤–∏—Å–∏—Ç –æ—Ç FileStorage, DatabaseStorage (–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ)
//    - –ù–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ –º–æ–¥—É–ª–∏: Circle, Rectangle, Triangle –ù–ï —Ä–µ–∞–ª–∏–∑—É—é—Ç –æ–±—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
//
// 3. ‚ùå –ê–ë–°–¢–†–ê–ö–¶–ò–ò –ó–ê–í–ò–°–Ø–¢ –û–¢ –î–ï–¢–ê–õ–ï–ô (–∏—Ö –ø—Ä–æ—Å—Ç–æ –Ω–µ—Ç!)
//    - –ù–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ Shape, Storage, Display
//    - –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∫–ª–∞—Å—Å–∞–º
//
// 4. ‚ùå –î–ï–¢–ê–õ–ò –ù–ï –ó–ê–í–ò–°–Ø–¢ –û–¢ –ê–ë–°–¢–†–ê–ö–¶–ò–ô
//    - Circle, Rectangle, Triangle –ù–ï —Ä–µ–∞–ª–∏–∑—É—é—Ç –æ–±—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
//    - FileStorage, DatabaseStorage –ù–ï —Ä–µ–∞–ª–∏–∑—É—é—Ç –æ–±—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
//
// –ü–†–û–ë–õ–ï–ú–´:
// 1. –ñ–µ—Å—Ç–∫–∞—è —Å–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å - –∫–ª–∞—Å—Å—ã –∑–∞–≤–∏—Å—è—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
// 2. –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ –∏–Ω–≤–µ—Ä—Å–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è–º
// 3. –°–ª–æ–∂–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –Ω–µ–ª—å–∑—è –ª–µ–≥–∫–æ –∑–∞–º–µ–Ω–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
// 4. –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏/–∑–∞–∫—Ä—ã—Ç–æ—Å—Ç–∏ - –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö –≤–ª–∏—è—é—Ç –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å
// 5. –°–ª–æ–∂–Ω–æ—Å—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ —Ç—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–¥–∞

// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï DIP: –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–∏–≥—É—Ä
// üîÑ –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç –æ–±—â–µ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ - –¥–µ—Ç–∞–ª–∏ –Ω–µ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–π

class Circle {
    constructor(private radius: number) {}

    getArea(): number {
        return Math.PI * this.radius * this.radius;
    }

    getPerimeter(): number {
        return 2 * Math.PI * this.radius;
    }

    getInfo(): string {
        return `Circle: radius=${this.radius}`;
    }
}

class Rectangle {
    constructor(private width: number, private height: number) {}

    getArea(): number {
        return this.width * this.height;
    }

    getPerimeter(): number {
        return 2 * (this.width + this.height);
    }

    getInfo(): string {
        return `Rectangle: ${this.width}x${this.height}`;
    }
}

interface ShapeData {
    circledata: { radius: number };
    rectangledata: { width: number; height: number };
}


// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï DIP: –ö–ª–∞—Å—Å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π
// üîÑ –ü–†–û–ë–õ–ï–ú–ê: –í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π –º–æ–¥—É–ª—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã—Ö
class BadShapeCalculator {
    // ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
    // üîÑ –ù–ê–†–£–®–ï–ù–ò–ï: –í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π –º–æ–¥—É–ª—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã—Ö
    private badCircle: Circle;
    private badRectangle: Rectangle;

    constructor({circledata : {radius}, rectangledata : {width, height}} : ShapeData) {
        // ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï DIP: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞
        // üîÑ –ù–ê–†–£–®–ï–ù–ò–ï: –í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π –º–æ–¥—É–ª—å —Å–æ–∑–¥–∞–µ—Ç –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ –º–æ–¥—É–ª–∏ –∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –Ω–∏—Ö
        this.badCircle = new Circle(radius);
        this.badRectangle = new Rectangle(width, height);
    }

    calculateCircleArea(): number {
        return this.badCircle.getArea();
    }

    calculateRectangleArea(): number {
        return this.badRectangle.getArea();
    }
}

export {}

