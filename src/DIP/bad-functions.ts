// ‚ùå –ü–õ–û–•–û: –ù–∞—Ä—É—à–µ–Ω–∏–µ DIP - —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π
//
// üîÑ –ù–ê–†–£–®–ï–ù–ò–ï DIP:
// 1. ‚ùå –í–´–°–û–ö–û–£–†–û–í–ù–ï–í–´–ï –§–£–ù–ö–¶–ò–ò –ó–ê–í–ò–°–Ø–¢ –û–¢ –ù–ò–ó–ö–û–£–†–û–í–ù–ï–í–´–•
//    - calculateArea –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–∏–ø–æ–≤ Circle, Rectangle
//    - processShapes —Å–æ–∑–¥–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è
//
// 2. ‚ùå –ù–ï–¢ –ê–ë–°–¢–†–ê–ö–¶–ò–ô
//    - –ù–µ—Ç –æ–±—â–µ–≥–æ —Ç–∏–ø–∞ Shape
//    - –§—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏
//
// –ü–†–û–ë–õ–ï–ú–´:
// 1. –ñ–µ—Å—Ç–∫–∞—è —Å–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å - —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–∏–ø–æ–≤
// 2. –°–ª–æ–∂–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –Ω–µ–ª—å–∑—è –ª–µ–≥–∫–æ –∑–∞–º–µ–Ω–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
// 3. –°–ª–æ–∂–Ω–æ—Å—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ–∏–≥—É—Ä —Ç—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π

// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï DIP: –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–∏–ø—ã –¥–ª—è —Ñ–∏–≥—É—Ä
type Circle = {
    radius: number;
    getArea: () => number;
    getInfo: () => string;
};

type Rectangle = {
    width: number;
    height: number;
    getArea: () => number;
    getInfo: () => string;
};

// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï DIP: –§—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
function createCircle(radius: number): Circle {
    return {
        radius,
        getArea: () => Math.PI * radius * radius,
        getInfo: () => `Circle: radius=${radius}`
    };
}

// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï DIP: –§—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
function createRectangle(width: number, height: number): Rectangle {
    return {
        width,
        height,
        getArea: () => width * height,
        getInfo: () => `Rectangle: ${width}x${height}`
    };
}

// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï DIP: –§—É–Ω–∫—Ü–∏–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–∏–ø–æ–≤
// üîÑ –ü–†–û–ë–õ–ï–ú–ê: –í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã—Ö —Ç–∏–ø–æ–≤
function calculateArea(shape: Circle | Rectangle): number {
    // ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù—É–∂–Ω–æ –∑–Ω–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    if ('radius' in shape) {
        return shape.getArea(); // Circle
    } else {
        return shape.getArea(); // Rectangle
    }
}

// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï DIP: –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è
function processShapes(): number {
    // ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è
    const circle = createCircle(5);
    const rectangle = createRectangle(4, 6);
    
    return calculateArea(circle) + calculateArea(rectangle);
}

// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï DIP: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–∏–ø–æ–≤
function displayShapeInfo(shape: Circle | Rectangle): string {
    // ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù—É–∂–Ω–æ –∑–Ω–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø
    if ('radius' in shape) {
        return `Circle area: ${shape.getArea()}`;
    } else {
        return `Rectangle area: ${shape.getArea()}`;
    }
}

// // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ - –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–±–ª–µ–º

// processShapes();

// const circle = createCircle(3);
// const rectangle = createRectangle(2, 4);

// displayShapeInfo(circle);
// displayShapeInfo(rectangle); 