// ‚úÖ –•–û–†–û–®–û: –°–æ–±–ª—é–¥–µ–Ω–∏–µ DIP - —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–π, –∞ –Ω–µ –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π
//
// üìã –û–°–ù–û–í–ù–ê–Ø –ò–î–ï–Ø DIP:
// 1. ‚úÖ –í–´–°–û–ö–û–£–†–û–í–ù–ï–í–´–ï –§–£–ù–ö–¶–ò–ò –ù–ï –ó–ê–í–ò–°–Ø–¢ –û–¢ –ù–ò–ó–ö–û–£–†–û–í–ù–ï–í–´–•
//    - calculateArea, displayInfo –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ç–∏–ø–∞ Shape (–∞–±—Å—Ç—Ä–∞–∫—Ü–∏—è)
//    - –ù–ï –∑–∞–≤–∏—Å—è—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–∏–ø–æ–≤ Circle, Rectangle
//
// 2. ‚úÖ –û–ë–ê –¢–ò–ü–ê –ó–ê–í–ò–°–Ø–¢ –û–¢ –ê–ë–°–¢–†–ê–ö–¶–ò–ô
//    - –í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: calculateArea –∑–∞–≤–∏—Å–∏—Ç –æ—Ç Shape
//    - –ù–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: createCircle, createRectangle –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç Shape
//
// 3. ‚úÖ –ê–ë–°–¢–†–ê–ö–¶–ò–ò –ù–ï –ó–ê–í–ò–°–Ø–¢ –û–¢ –î–ï–¢–ê–õ–ï–ô
//    - –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Shape –Ω–µ –∑–Ω–∞–µ—Ç –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è—Ö
//    - –ê–±—Å—Ç—Ä–∞–∫—Ü–∏—è —Å—Ç–∞–±–∏–ª—å–Ω–∞ –∏ —Ä–µ–¥–∫–æ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è
//
// 4. ‚úÖ –î–ï–¢–ê–õ–ò –ó–ê–í–ò–°–Ø–¢ –û–¢ –ê–ë–°–¢–†–ê–ö–¶–ò–ô
//    - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã —Ä–µ–∞–ª–∏–∑—É—é—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Shape
//    - –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –∫ –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—è–º
//
// ‚ú® –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:
// 1. –°–ª–∞–±–∞—è —Å–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å - —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–π
// 2. –õ–µ–≥–∫–æ—Å—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –∑–∞–º–µ–Ω–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
// 3. –ü—Ä–æ—Å—Ç–æ—Ç–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
// 4. –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º - –∫–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–º–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
// 5. –ò–Ω–≤–µ—Ä—Å–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –∫ –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—è–º

// ‚úÖ DIP: –ê–±—Å—Ç—Ä–∞–∫—Ü–∏—è (—Ç–∏–ø) - –≤—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –Ω–µ—ë
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç, –Ω–æ –Ω–µ –∑–Ω–∞–µ—Ç –æ –¥–µ—Ç–∞–ª—è—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –°—Ç–∞–±–∏–ª—å–Ω–∞—è –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Ä–µ–¥–∫–æ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è
type Shape = {
  getArea: () => number;
  getInfo: () => string;
};

// ‚úÖ DIP: –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ - –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç –æ–±—ä–µ–∫—Ç—ã
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –ö–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Shape
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –í—Å–µ —Ñ–∏–≥—É—Ä—ã –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤–æ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
function createCircle(radius: number): Shape {
  return {
    getArea: () => Math.PI * radius * radius,
    getInfo: () => `Circle: radius=${radius}`,
  };
}

function createRectangle(width: number, height: number): Shape {
  return {
    getArea: () => width * height,
    getInfo: () => `Rectangle: ${width}x${height}`,
  };
}

// ‚úÖ DIP: –í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–∏
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –§—É–Ω–∫—Ü–∏–∏ –Ω–µ –∑–Ω–∞—é—Ç –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–∏–ø–∞—Ö —Ñ–∏–≥—É—Ä
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ú–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ª—é–±—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–º–∏ Shape
function calculateArea(shape: Shape): number {
  // ‚úÖ –†–∞–±–æ—Ç–∞–µ–º —Å –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–µ–π Shape, –∞ –Ω–µ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏
  // üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º - —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ —Ñ–∏–≥—É—Ä–∞–º–∏
  // üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ù–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø —Ñ–∏–≥—É—Ä—ã
  return shape.getArea();
}

function displayShapeInfo(shape: Shape): string {
  // ‚úÖ –†–∞–±–æ—Ç–∞–µ–º —Å –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–µ–π Shape, –∞ –Ω–µ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏
  // üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º - —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ —Ñ–∏–≥—É—Ä–∞–º–∏
  // üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ù–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø —Ñ–∏–≥—É—Ä—ã
  return `${shape.getInfo()} - Area: ${shape.getArea().toFixed(2)}`;
}

// ‚úÖ DIP: –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–µ–π
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –ù–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–∏–ø—ã —Ñ–∏–≥—É—Ä
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
function findLargestShape(shapes: Shape[]): Shape | null {
  if (shapes.length === 0) return null;

  return shapes.reduce((largest, current) => {
    return current.getArea() > largest.getArea() ? current : largest;
  });
}

function processShapes(shapes: Shape[]): {
  infos: string[];
  largest: Shape | null;
} {
  const infos: string[] = [];
  shapes.forEach((shape) => {
    infos.push(displayShapeInfo(shape));
  });

  const largest = findLargestShape(shapes);

  return { infos, largest };
}

// ‚úÖ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–ï–ò–ú–£–©–ï–°–¢–í: –õ–µ–≥–∫–æ—Å—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –º–æ–∫-–æ–±—ä–µ–∫—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ò–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
function createMockShape(area: number, info: string): Shape {
  return {
    getArea: () => area,
    getInfo: () => info,
  };
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ - –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è DIP
// –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–≥—É—Ä (–ª—É—á—à–µ –±—ã–ª–æ –±—ã —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä)
const circle = createCircle(5);
const rectangle = createRectangle(4, 6);

// ‚úÖ DIP: –í—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—è–º–∏
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –ù–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–∏–ø—ã
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ì–∏–±–∫–æ—Å—Ç—å –∏ —Ä–∞—Å—à–∏—Ä—è–µ–º–æ—Å—Ç—å
displayShapeInfo(circle);
displayShapeInfo(rectangle);
processShapes([circle, rectangle]);

export {};
