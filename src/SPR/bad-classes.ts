// ‚ùå –ü–õ–û–•–û: –ù–∞—Ä—É—à–µ–Ω–∏–µ SRP - –æ–¥–∏–Ω –∫–ª–∞—Å—Å –¥–µ–ª–∞–µ—Ç –≤—Å—ë –¥–ª—è –≤—Å–µ—Ö —Ñ–∏–≥—É—Ä
//
// üìã –ù–ê–†–£–®–ï–ù–ò–ï –û–°–ù–û–í–ù–û–ô –ò–î–ï–ò SRP:
// 1. ‚ùå –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ï –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–°–¢–ò - –∫–ª–∞—Å—Å –∑–Ω–∞–µ—Ç –æ –≤—Å–µ—Ö —Ç–∏–ø–∞—Ö —Ñ–∏–≥—É—Ä
// 2. ‚ùå –°–ú–ï–®–ê–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê - –≤–∞–ª–∏–¥–∞—Ü–∏—è, —Ä–∞—Å—á–µ—Ç—ã, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ –æ–¥–Ω–æ–º –º–µ—Ç–æ–¥–µ
// 3. ‚ùå –ù–ï–ß–ï–¢–ö–ò–ï –ì–†–ê–ù–ò–¶–´ - –∫–ª–∞—Å—Å –¥–µ–ª–∞–µ—Ç —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ä–∞–∑–Ω—ã—Ö –≤–µ—â–µ–π
// 4. ‚ùå –°–õ–û–ñ–ù–û–°–¢–¨ –ò–ó–ú–ï–ù–ï–ù–ò–Ø - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ–¥–Ω–æ–π —Ñ–∏–≥—É—Ä—ã –≤–ª–∏—è–µ—Ç –Ω–∞ –≤–µ—Å—å –∫–ª–∞—Å—Å
// 5. ‚ùå –°–õ–û–ñ–ù–û–°–¢–¨ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø - –Ω—É–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å—é –ª–æ–≥–∏–∫—É —Å—Ä–∞–∑—É
//
// –ü–†–û–ë–õ–ï–ú–´:
// 1. –û–¥–∏–Ω –∫–ª–∞—Å—Å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤—Å–µ —Ç–∏–ø—ã —Ñ–∏–≥—É—Ä
// 2. –û–¥–∏–Ω –º–µ—Ç–æ–¥ –¥–µ–ª–∞–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é, —Ä–∞—Å—á–µ—Ç—ã –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
// 3. –°–ª–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ñ–∏–≥—É—Ä
// 4. –°–ª–æ–∂–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
// 5. –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏

// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï SRP: –ö–ª–∞—Å—Å —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—è–º–∏
// üí° –ß–¢–û –ù–ï –¢–ê–ö: –ö–ª–∞—Å—Å –∑–Ω–∞–µ—Ç –æ –≤—Å–µ—Ö —Ç–∏–ø–∞—Ö —Ñ–∏–≥—É—Ä –∏ –¥–µ–ª–∞–µ—Ç –≤—Å—ë –¥–ª—è –Ω–∏—Ö
// üéØ –ö–ê–ö –ò–°–ü–†–ê–í–ò–¢–¨: –†–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Ñ–∏–≥—É—Ä—ã
class ShapeProcessor {
    radius?: number;
    width?: number;
    height?: number;

    constructor(radius?: number, width?: number, height?: number) {
        this.radius = radius;
        this.width = width;
        this.height = height;
    }

    // ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï SRP: –ü–ª–æ—Ö–æ–π –º–µ—Ç–æ–¥ - –¥–µ–ª–∞–µ—Ç –≤—Å—ë –¥–ª—è –≤—Å–µ—Ö —Ñ–∏–≥—É—Ä
    // üí° –ü–†–û–ë–õ–ï–ú–´:
    //    - –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–∏–≥—É—Ä
    //    - –†–∞—Å—á–µ—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–∏–≥—É—Ä
    //    - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–∏–≥—É—Ä
    //    - –°–º–µ—à–∞–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤ –æ–¥–Ω–æ–º –º–µ—Ç–æ–¥–µ
    // üéØ –†–ï–®–ï–ù–ò–ï: –†–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∏ –∫–ª–∞—Å—Å—ã
    processShape(shapeType: 'circle' | 'rectangle'): {area: number, perimeter: number} {
        if (shapeType === 'circle') {
            // ‚ùå –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–°–¢–¨ 1: –í–∞–ª–∏–¥–∞—Ü–∏—è –∫—Ä—É–≥–∞
            if (!this.radius || this.radius <= 0) {
                throw new Error('Invalid circle radius');
            }

            // ‚ùå –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–°–¢–¨ 2: –†–∞—Å—á–µ—Ç –ø–ª–æ—â–∞–¥–∏ –∫—Ä—É–≥–∞
            const area = Math.PI * this.radius * this.radius;
            
            // ‚ùå –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–°–¢–¨ 3: –†–∞—Å—á–µ—Ç –ø–µ—Ä–∏–º–µ—Ç—Ä–∞ –∫—Ä—É–≥–∞
            const perimeter = 2 * Math.PI * this.radius; 

            return {area, perimeter};

        } else if (shapeType === 'rectangle') {
            // ‚ùå –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–°–¢–¨ 1: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
            if (!this.width || !this.height || this.width <= 0 || this.height <= 0) {
                throw new Error('Invalid rectangle dimensions');
            }

            // ‚ùå –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–°–¢–¨ 2: –†–∞—Å—á–µ—Ç –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
            const area = this.width * this.height;
            
            // ‚ùå –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–°–¢–¨ 3: –†–∞—Å—á–µ—Ç –ø–µ—Ä–∏–º–µ—Ç—Ä–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
            const perimeter = 2 * (this.width + this.height);

            return {area, perimeter};
        }

        throw new Error('Invalid shape type')
    }

    // ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ñ–∏–≥—É—Ä—É
    // üí° –ß–¢–û –ù–ï –¢–ê–ö: –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è Triangle –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤–µ—Å—å –∫–ª–∞—Å—Å
    // üéØ –†–ï–®–ï–ù–ò–ï: –°–æ–∑–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å Triangle
    // processTriangle() {
    //     // –ü—Ä–∏—à–ª–æ—Å—å –±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É –≤ —ç—Ç–æ—Ç –∂–µ –∫–ª–∞—Å—Å
    // }
}

// ‚ùå –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–û–ë–õ–ï–ú: –°–ª–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
// üí° –ü–†–û–ë–õ–ï–ú–ê: –û–¥–∏–Ω –∫–ª–∞—Å—Å –ø—ã—Ç–∞–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—Å–µ —Ç–∏–ø—ã —Ñ–∏–≥—É—Ä
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü—É—Ç–∞–Ω–∏—Ü–∞ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å
const circleParams = new ShapeProcessor(5).processShape('circle'); 
const rectangleParams = new ShapeProcessor(undefined, 4, 6).processShape('rectangle'); 

// ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ–ª—å–∑—è –ª–µ–≥–∫–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ñ–∏–≥—É—Ä—É
// const triangleParams = new ShapeProcessor(undefined, 4, 6).processShape('triangle'); // ‚ùå –ù—É–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å –∫–ª–∞—Å—Å!

export {};