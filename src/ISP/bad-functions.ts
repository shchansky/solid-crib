// ‚ùå –ü–õ–û–•–û: –ù–∞—Ä—É—à–µ–Ω–∏–µ ISP - —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å —Ç–æ–ª—Å—Ç—ã–º–∏ —Ç–∏–ø–∞–º–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º–∏ –Ω–µ–Ω—É–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã
//
// üîÄ –ù–ê–†–£–®–ï–ù–ò–ï –û–°–ù–û–í–ù–û–ô –ò–î–ï–ò ISP:
// 1. ‚ùå –ö–õ–ò–ï–ù–¢–´ –ó–ê–í–ò–°–Ø–¢ –û–¢ –ú–ï–¢–û–î–û–í, –ö–û–¢–û–†–´–ï –ù–ï –ò–°–ü–û–õ–¨–ó–£–Æ–¢
//    - createCircle –≤—ã–Ω—É–∂–¥–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å getDiagonal(), –∫–æ—Ç–æ—Ä—ã–π –µ–º—É –Ω–µ –Ω—É–∂–µ–Ω
//    - createRectangle –≤—ã–Ω—É–∂–¥–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å getDiametr(), –∫–æ—Ç–æ—Ä—ã–π –µ–º—É –Ω–µ –Ω—É–∂–µ–Ω
//
// 2. ‚ùå –¢–û–õ–°–¢–´–ô –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –¢–ò–ü
//    - –û–¥–∏–Ω —Ç–∏–ø –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–∫—Ä—ã—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã
//    - –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
//
// 3. ‚ùå –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –ù–ï–ù–£–ñ–ù–´–• –ú–ï–¢–û–î–û–í
//    - –§—É–Ω–∫—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã —Å –º–µ—Ç–æ–¥–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏–º–µ—é—Ç —Å–º—ã—Å–ª–∞
//    - –í–æ–∑–≤—Ä–∞—â–∞—é—Ç –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (0, null, undefined)
//
// –ü–†–û–ë–õ–ï–ú–´:
// 1. –¢–æ–ª—Å—Ç—ã–µ —Ç–∏–ø—ã - —Å–æ–¥–µ—Ä–∂–∞—Ç —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –º–µ—Ç–æ–¥–æ–≤
// 2. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å - —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –Ω–µ–Ω—É–∂–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
// 3. –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ - —Ñ—É–Ω–∫—Ü–∏–∏ –∑–Ω–∞—é—Ç –æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ–º
// 4. –°–ª–æ–∂–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã —Å–æ –≤—Å–µ–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
// 5. –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ - —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç —Å–ª—É—á–∞–π–Ω–æ –≤—ã–∑–≤–∞—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã

// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï ISP: –¢–æ–ª—Å—Ç—ã–π —Ç–∏–ø –¥–ª—è —Ñ–∏–≥—É—Ä—ã, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã
// üí° –ß–¢–û –ù–ï –¢–ê–ö: –¢–∏–ø —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –Ω—É–∂–Ω—ã –≤—Å–µ–º —Ä–µ–∞–ª–∏–∑—É—é—â–∏–º –æ–±—ä–µ–∫—Ç–∞–º
// üéØ –ö–ê–ö –ò–°–ü–†–ê–í–ò–¢–¨: –†–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤
type Shape = {
    // ‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –≤—Å–µ—Ö —Ñ–∏–≥—É—Ä - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
    getArea(): number;
    getPerimeter(): number;
    getInfo(): string;
    
    // ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ú–µ—Ç–æ–¥ –ø–æ–¥—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –∫—Ä—É–≥–∞
    // üí° –ß–¢–û –ù–ï –¢–ê–ö: Rectangle –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –¥–∏–∞–º–µ—Ç—Ä
    // üéØ –†–ï–®–ï–ù–ò–ï: –í—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ç–∏–ø CircleShape
    getDiametr(): number;

    // ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ú–µ—Ç–æ–¥ –ø–æ–¥—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
    // üí° –ß–¢–û –ù–ï –¢–ê–ö: Circle –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –¥–∏–∞–≥–æ–Ω–∞–ª—å
    // üéØ –†–ï–®–ï–ù–ò–ï: –í—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ç–∏–ø RectangleShape
    getDiagonal(): number;
};

// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï ISP: –§–∞–±—Ä–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç –æ–±—ä–µ–∫—Ç—ã —Å –Ω–µ–Ω—É–∂–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
// üí° –ü–†–û–ë–õ–ï–ú–ê: Circle –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ–º—É –Ω–µ –Ω—É–∂–Ω—ã
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
function createCircle(radius: number): Shape {
    return {
        getArea: () => Math.PI * radius * radius,
        getPerimeter: () => 2 * Math.PI * radius,
        getInfo: () => `Circle: radius=${radius}`,
        getDiametr: () => radius * 2, 
        // ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï ISP: –ö—Ä—É–≥ –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ–º—É –Ω–µ –Ω—É–∂–Ω—ã
        // üí° –ü–†–û–ë–õ–ï–ú–ê: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        // üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –õ–∏—Å–∫–æ–≤
        getDiagonal: () => 0, // –ü—É—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
    };
}

// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï ISP: –§–∞–±—Ä–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç –æ–±—ä–µ–∫—Ç—ã —Å –Ω–µ–Ω—É–∂–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
// üí° –ü–†–û–ë–õ–ï–ú–ê: Rectangle –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ–º—É –Ω–µ –Ω—É–∂–Ω—ã
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
function createRectangle(width: number, height: number): Shape {
    return {
        getArea: () => width * height,
        getPerimeter: () => 2 * (width + height),
        getInfo: () => `Rectangle: ${width}x${height}`,
        // ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï ISP: –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ–º—É –Ω–µ –Ω—É–∂–Ω—ã
        // üí° –ü–†–û–ë–õ–ï–ú–ê: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        // üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –õ–∏—Å–∫–æ–≤
        getDiametr: () => 0, 
        getDiagonal: () => Math.sqrt(width * width + height * height),
    };
}

// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï ISP: –§–∞–±—Ä–∏–∫–∞ —Å–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã —Å –Ω–µ–Ω—É–∂–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
// üí° –ü–†–û–ë–õ–ï–ú–ê: –ö–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –µ–º—É –Ω–µ –Ω—É–∂–Ω—ã
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ò–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –∏ –ø—É—Ç–∞–Ω–∏—Ü–∞
const createShapeFactory = {
    // –§–∞–±—Ä–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä—É–≥–∞
    circle: (radius: number) => {
        const circle = createCircle(radius);
        return {
            area: circle.getArea(),
            perimeter: circle.getPerimeter(),
            info: circle.getInfo(),
            diameter: circle.getDiametr(),
            diagonal: circle.getDiagonal(), // ‚ùå –ù–µ–Ω—É–∂–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∫—Ä—É–≥–∞
        };
    },
    
    // –§–∞–±—Ä–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
    rectangle: (width: number, height: number) => {
        const rectangle = createRectangle(width, height);
        return {
            area: rectangle.getArea(),
            perimeter: rectangle.getPerimeter(),
            info: rectangle.getInfo(),
            diameter: rectangle.getDiametr(), // ‚ùå –ù–µ–Ω—É–∂–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
            diagonal: rectangle.getDiagonal(),
        };
    }
};

// ‚ùå –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–û–ë–õ–ï–ú: –ò–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
// üí° –ü–†–û–ë–õ–ï–ú–ê: –û–±—ä–µ–∫—Ç—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –Ω–µ–Ω—É–∂–Ω—ã–µ –ø–æ–ª—è
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü—É—Ç–∞–Ω–∏—Ü–∞ –∏ –∏–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç—å
const badCircleData = createShapeFactory.circle(10);
const badRectangleData = createShapeFactory.rectangle(4, 6);

// ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ–ª—å–∑—è –ª–µ–≥–∫–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–∏–µ –ø–æ–ª—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω—ã
// console.log(badCircleData.diagonal); // 0 - –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
// console.log(badRectangleData.diameter); // 0 - –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

// ‚ùå –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–û–ë–õ–ï–ú: –°–ª–æ–∂–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
// üí° –ü–†–û–ë–õ–ï–ú–ê: –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã —Å–æ –≤—Å–µ–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
// üéØ –†–ï–®–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–∏–ø—ã
function demonstrateTestingProblems() {
    // ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –≤—Å–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    // const mockShape: Shape = {
    //     getArea: () => 10,
    //     getPerimeter: () => 20,
    //     getInfo: () => 'Mock',
    //     getDiametr: () => 0, // –ù–µ–Ω—É–∂–Ω—ã–π –º–µ—Ç–æ–¥
    //     getDiagonal: () => 0, // –ù–µ–Ω—É–∂–Ω—ã–π –º–µ—Ç–æ–¥
    // };
}

export {}
