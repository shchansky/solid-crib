// ‚úÖ –•–û–†–û–®–û: –°–æ–±–ª—é–¥–µ–Ω–∏–µ ISP - —Ç–æ–Ω–∫–∏–µ —Ç–∏–ø—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã
//
// 1. ‚úÖ –ö–õ–ò–ï–ù–¢–´ –ù–ï –ó–ê–í–ò–°–Ø–¢ –û–¢ –ú–ï–¢–û–î–û–í, –ö–û–¢–û–†–´–ï –ù–ï –ò–°–ü–û–õ–¨–ó–£–Æ–¢
//    - createCircle –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ CircleShape —Å –Ω—É–∂–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
//    - createRectangle –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ RectangleShape —Å –Ω—É–∂–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
//
// 2. ‚úÖ –¢–û–ù–ö–ò–ï –°–ü–ï–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –¢–ò–ü–´
//    - –ö–∞–∂–¥—ã–π —Ç–∏–ø –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–¥–Ω—É –æ–±–ª–∞—Å—Ç—å
//    - –ß–µ—Ç–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
//
// 3. ‚úÖ –î–û–ë–†–û–í–û–õ–¨–ù–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –ù–£–ñ–ù–´–• –ú–ï–¢–û–î–û–í
//    - –§—É–Ω–∫—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –æ–±—ä–µ–∫—Ç—ã —Ç–æ–ª—å–∫–æ —Å –º–µ—Ç–æ–¥–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç —Å–º—ã—Å–ª
//    - –ù–µ—Ç –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π


// –ë–∞–∑–æ–≤—ã–π —Ç–∏–ø –¥–ª—è –≤—Å–µ—Ö —Ñ–∏–≥—É—Ä - —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
type Shape = {
  getArea: () => number;
  getPerimeter: () => number;
  getInfo: () => string;
};

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ç–∏–ø –¥–ª—è –∫—Ä—É–≥–∞ - —Ç–æ–ª—å–∫–æ –º–µ—Ç–æ–¥—ã, —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –∫—Ä—É–≥–∞
type CircleShape = Shape & {
  getDiameter: () => number; // ‚úÖ –¢–æ–ª—å–∫–æ –¥–ª—è –∫—Ä—É–≥–∞
};

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ç–∏–ø –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ - —Ç–æ–ª—å–∫–æ –º–µ—Ç–æ–¥—ã, —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
type RectangleShape = Shape & {
  getDiagonal: () => number; // ‚úÖ –¢–æ–ª—å–∫–æ –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
};

// ‚úÖ ISP: –§–∞–±—Ä–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç –æ–±—ä–µ–∫—Ç—ã —Ç–æ–ª—å–∫–æ —Å –Ω—É–∂–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –ö–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ù–µ—Ç –∏–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π

function createCircle(radius: number): CircleShape {
  return {
    getArea: () => Math.PI * radius * radius,
    getPerimeter: () => 2 * Math.PI * radius,
    getInfo: () => `Circle: radius=${radius}`,
    getDiameter: () => radius * 2, // ‚úÖ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –∫—Ä—É–≥–∞
  };
}

function createRectangle(width: number, height: number): RectangleShape {
  return {
    getArea: () => width * height,
    getPerimeter: () => 2 * (width + height),
    getInfo: () => `Rectangle: ${width}x${height}`,
    getDiagonal: () => Math.sqrt(width * width + height * height), // ‚úÖ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
  };
}

// ‚úÖ ISP: –§–∞–±—Ä–∏–∫–∞ —Å–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã —Ç–æ–ª—å–∫–æ —Å –Ω—É–∂–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –ö–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –ø–æ–ª—è
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ù–µ—Ç –∏–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
const createShapeFactory = {
  // –§–∞–±—Ä–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä—É–≥–∞
  circle: (radius: number) => {
    const circle = createCircle(radius);
    return {
      area: circle.getArea(),
      perimeter: circle.getPerimeter(),
      info: circle.getInfo(),
      diameter: circle.getDiameter(), // ‚úÖ –¢–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –∫—Ä—É–≥–∞
    };
  },

  // –§–∞–±—Ä–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
  rectangle: (width: number, height: number) => {
    const rectangle = createRectangle(width, height);
    return {
      area: rectangle.getArea(),
      perimeter: rectangle.getPerimeter(),
      info: rectangle.getInfo(),
      diagonal: rectangle.getDiagonal(), // ‚úÖ –¢–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
    };
  },
};

// ‚úÖ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–ï–ò–ú–£–©–ï–°–¢–í: –ù–µ—Ç –∏–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –ö–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –ø–æ–ª—è
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ß–µ—Ç–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
const circleData = createShapeFactory.circle(10);
const rectangleData = createShapeFactory.rectangle(4, 6);

export {};
