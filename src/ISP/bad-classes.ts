// ‚ùå –ü–õ–û–•–û: –ù–∞—Ä—É—à–µ–Ω–∏–µ ISP - —Ç–æ–ª—Å—Ç—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –∫–ª–∞—Å—Å—ã —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã
//
// 1. ‚ùå –ö–õ–ò–ï–ù–¢–´ –ó–ê–í–ò–°–Ø–¢ –û–¢ –ú–ï–¢–û–î–û–í, –ö–û–¢–û–†–´–ï –ù–ï –ò–°–ü–û–õ–¨–ó–£–Æ–¢
//    - Circle –≤—ã–Ω—É–∂–¥–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å getDiagonal(), –∫–æ—Ç–æ—Ä—ã–π –µ–º—É –Ω–µ –Ω—É–∂–µ–Ω
//    - Rectangle –≤—ã–Ω—É–∂–¥–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å getDiameter(), –∫–æ—Ç–æ—Ä—ã–π –µ–º—É –Ω–µ –Ω—É–∂–µ–Ω
//
// 2. ‚ùå –¢–û–õ–°–¢–´–ô –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –ò–ù–¢–ï–†–§–ï–ô–°
//    - –û–¥–∏–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–∫—Ä—ã—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã
//    - –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
//
// 3. ‚ùå –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –ù–ï–ù–£–ñ–ù–´–• –ú–ï–¢–û–î–û–í
//    - –ö–ª–∞—Å—Å—ã –¥–æ–ª–∂–Ω—ã —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏–º–µ—é—Ç —Å–º—ã—Å–ª–∞
//    - –í–æ–∑–≤—Ä–∞—â–∞—é—Ç –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (0, null, undefined)

interface Shape {
  getArea(): number;
  getPerimeter(): number;
  getInfo(): string;

  // ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ú–µ—Ç–æ–¥ –ø–æ–¥—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –∫—Ä—É–≥–∞
  getDiameter(): number;

  // ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ú–µ—Ç–æ–¥ –ø–æ–¥—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
  getDiagonal(): number;
}

// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï ISP: –ö—Ä—É–≥ –≤—ã–Ω—É–∂–¥–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã
// üí° –ß–¢–û –ù–ï –¢–ê–ö: Circle –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å getDiagonal(), –∫–æ—Ç–æ—Ä—ã–π –µ–º—É –Ω–µ –Ω—É–∂–µ–Ω
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 0
class Circle implements Shape {
  constructor(private radius: number) {}

  getArea() {
    return Math.PI * this.radius * this.radius;
  }

  getPerimeter() {
    return 2 * Math.PI * this.radius;
  }

  getInfo(): string {
    return `Circle: radius=${this.radius}`;
  }

  getDiameter() {
    return this.radius * 2;
  }

  // ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï ISP: –ö—Ä—É–≥ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –µ–º—É –Ω–µ –Ω—É–∂–µ–Ω
  // üí° –ß–¢–û –ù–ï –¢–ê–ö: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  // üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –õ–∏—Å–∫–æ–≤
  getDiagonal() {
    return 0; // ‚ùå –ë–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∫—Ä—É–≥–∞
  }
}

// ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Ç–æ–∂–µ –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã
// üí° –ß–¢–û –ù–ï –¢–ê–ö: Rectangle –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å getDiameter(), –∫–æ—Ç–æ—Ä—ã–π –µ–º—É –Ω–µ –Ω—É–∂–µ–Ω
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 0
class Rectangle implements Shape {
  constructor(private width: number, private height: number) {}

  getArea(): number {
    return this.width * this.height;
  }

  getPerimeter(): number {
    return 2 * (this.width + this.height);
  }

  getInfo(): string {
    return `Rectangle: ${this.width}x${this.height}`;
  }

  // ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï ISP: –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –µ–º—É –Ω–µ –Ω—É–∂–µ–Ω
  // üí° –ß–¢–û –ù–ï –¢–ê–ö: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  // üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –õ–∏—Å–∫–æ–≤
  getDiameter() {
    return 0; // ‚ùå –ë–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
  }

  getDiagonal() {
    return Math.sqrt(this.width * this.width + this.height * this.height);
  }
}

// ‚ùå –ù–ê–†–£–®–ï–ù–ò–ï ISP: –§–∞–±—Ä–∏–∫–∞ —Å–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã —Å –Ω–µ–Ω—É–∂–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
// üí° –ß–¢–û –ù–ï –¢–ê–ö: –ö–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –µ–º—É –Ω–µ –Ω—É–∂–Ω—ã
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ò–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –∏ –ø—É—Ç–∞–Ω–∏—Ü–∞
class CreateShapeFactory {
  // –§–∞–±—Ä–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä—É–≥–∞
  static circle(radius: number) {
    const circle = new Circle(radius);
    return {
      area: circle.getArea(),
      perimeter: circle.getPerimeter(),
      info: circle.getInfo(),
      diameter: circle.getDiameter(),
      diagonal: circle.getDiagonal(), // ‚ùå –ù–µ–Ω—É–∂–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∫—Ä—É–≥–∞
    };
  }

  // –§–∞–±—Ä–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
  static rectangle(width: number, height: number) {
    const rectangle = new Rectangle(width, height);
    return {
      area: rectangle.getArea(),
      perimeter: rectangle.getPerimeter(),
      info: rectangle.getInfo(),
      diameter: rectangle.getDiameter(), // ‚ùå –ù–µ–Ω—É–∂–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
      diagonal: rectangle.getDiagonal(),
    };
  }
}

// ‚ùå –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–û–ë–õ–ï–ú: –ò–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
// üí° –ß–¢–û –ù–ï –¢–ê–ö: –û–±—ä–µ–∫—Ç—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –Ω–µ–Ω—É–∂–Ω—ã–µ –ø–æ–ª—è
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü—É—Ç–∞–Ω–∏—Ü–∞ –∏ –∏–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç—å
const circleData = CreateShapeFactory.circle(10);
const rectangleData = CreateShapeFactory.rectangle(4, 6);

// ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ–ª—å–∑—è –ª–µ–≥–∫–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–∏–µ –ø–æ–ª—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω—ã
console.log(circleData.diagonal); // 0 - –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
console.log(rectangleData.diameter); // 0 - –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

export {};
