// ‚úÖ –•–û–†–û–®–û: –°–æ–±–ª—é–¥–µ–Ω–∏–µ LSP - –∫–ª–∞—Å—Å—ã-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∏ –º–æ–≥—É—Ç –∑–∞–º–µ–Ω–∏—Ç—å –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å
//
// üîÑ –û–°–ù–û–í–ù–ê–Ø –ò–î–ï–Ø LSP:
// 1. ‚úÖ –°–û–ë–õ–Æ–î–ï–ù–ò–ï –ö–û–ù–¢–†–ê–ö–¢–ê - –∫–ª–∞—Å—Å—ã-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç –≤—Å–µ –æ–±–µ—â–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞
// 2. ‚úÖ –ü–†–ï–î–°–ö–ê–ó–£–ï–ú–û–ï –ü–û–í–ï–î–ï–ù–ò–ï - –∫–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Å –ª—é–±—ã–º –∫–ª–∞—Å—Å–æ–º-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–º
// 3. ‚úÖ –ò–°–¢–ò–ù–ù–ê–Ø –ü–û–î–°–¢–ê–ù–û–í–ö–ê - –∫–ª–∞—Å—Å—ã-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∏ —è–≤–ª—è—é—Ç—Å—è –∏—Å—Ç–∏–Ω–Ω—ã–º–∏ –ø–æ–¥—Ç–∏–ø–∞–º–∏
// 4. ‚úÖ –õ–ï–ì–ö–û–°–¢–¨ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø - –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –ª—é–±—ã–º –∫–ª–∞—Å—Å–æ–º-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–º
// 5. ‚úÖ –ü–û–õ–ò–ú–û–†–§–ò–ó–ú - –∫–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –±–∞–∑–æ–≤—ã–º —Ç–∏–ø–æ–º, –Ω–µ –∑–Ω–∞—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–ª–∞—Å—Å-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫
//
// –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:
// 1. –°–æ–±–ª—é–¥–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ - –∫–ª–∞—Å—Å—ã-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç –≤—Å–µ –æ–±–µ—â–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞
// 2. –ü—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ - –∫–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Å –ª—é–±—ã–º –∫–ª–∞—Å—Å–æ–º-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–º
// 3. –ò—Å—Ç–∏–Ω–Ω–∞—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ - –∫–ª–∞—Å—Å—ã-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∏ —è–≤–ª—è—é—Ç—Å—è –∏—Å—Ç–∏–Ω–Ω—ã–º–∏ –ø–æ–¥—Ç–∏–ø–∞–º–∏
// 4. –õ–µ–≥–∫–æ—Å—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –ª—é–±—ã–º –∫–ª–∞—Å—Å–æ–º-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–º
// 5. –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º - –∫–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –±–∞–∑–æ–≤—ã–º —Ç–∏–ø–æ–º, –Ω–µ –∑–Ω–∞—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–ª–∞—Å—Å-–Ω–∞—Å–ª–µ–¥–Ω–∏–∫

// ‚úÖ LSP: –ë–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å - –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç –¥–ª—è –≤—Å–µ—Ö —Ñ–∏–≥—É—Ä
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –ß–µ—Ç–∫–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—Å–µ –ø–æ–¥–∫–ª–∞—Å—Å—ã –¥–æ–ª–∂–Ω—ã —Å–æ–±–ª—é–¥–∞—Ç—å
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–¥—Ç–∏–ø–æ–≤

// –ñ–µ—Å—Ç–∫–∏–π —Ñ–æ—Ä–º–∞—Ç: "–ò–ú–Ø: Area=–ß–ò–°–õ–û, Perimeter=–ß–ò–°–õ–û"
type InfoType = `${string}: Area=${string}, Perimeter=${string}`;
interface Shape {
    getArea(): number;
    getPerimeter(): number;
    // –ñ–µ—Å—Ç–∫–∏–π —Ñ–æ—Ä–º–∞—Ç: "–ò–ú–Ø: Area=–ß–ò–°–õ–û, Perimeter=–ß–ò–°–õ–û"
    getInfo(): InfoType;
}

// ‚úÖ LSP: Rectangle - –∏—Å—Ç–∏–Ω–Ω—ã–π –ø–æ–¥—Ç–∏–ø Shape
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ –æ–±–µ—â–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Shape
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ú–æ–∂–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å –ª—é–±–æ–π –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ Shape
class Rectangle implements Shape {
    constructor(private width: number, private height: number) {}

    getArea(): number {
        return this.width * this.height;
    }

    getPerimeter(): number {
        return 2 * (this.width + this.height);
    }

    // ‚úÖ LSP: –°—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É–µ—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É —Ñ–æ—Ä–º–∞—Ç–∞
    // üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –æ–∂–∏–¥–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    // üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    getInfo(): `${string}: Area=${string}, Perimeter=${string}` {
        return `Rectangle: Area=${this.getArea().toFixed(2)}, Perimeter=${this.getPerimeter().toFixed(2)}`;
    }

    // ‚úÖ LSP: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –Ω–µ –Ω–∞—Ä—É—à–∞—é—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç
    // üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –†–∞—Å—à–∏—Ä—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏—è LSP
    // üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ì–∏–±–∫–æ—Å—Ç—å –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∏–Ω—Ü–∏–ø–∞ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏
    getWidth(): number {
        return this.width;
    }

    getHeight(): number {
        return this.height;
    }
}

// ‚úÖ LSP: Circle - –∏—Å—Ç–∏–Ω–Ω—ã–π –ø–æ–¥—Ç–∏–ø Shape
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ –æ–±–µ—â–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Shape
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ú–æ–∂–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å –ª—é–±–æ–π –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ Shape
class Circle implements Shape {
    constructor(private radius: number) {}

    getArea(): number {
        return Math.PI * this.radius * this.radius;
    }

    getPerimeter(): number {
        return 2 * Math.PI * this.radius;
    }

    // ‚úÖ LSP: –°—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É–µ—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É —Ñ–æ—Ä–º–∞—Ç–∞
    // üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –æ–∂–∏–¥–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    // üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    getInfo(): `${string}: Area=${string}, Perimeter=${string}` {
        return `Circle: Area=${this.getArea().toFixed(2)}, Perimeter=${this.getPerimeter().toFixed(2)}`;
    }

    // ‚úÖ LSP: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –Ω–µ –Ω–∞—Ä—É—à–∞—é—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç
    // üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –†–∞—Å—à–∏—Ä—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏—è LSP
    // üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ì–∏–±–∫–æ—Å—Ç—å –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∏–Ω—Ü–∏–ø–∞ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏
    getRadius(): number {
        return this.radius;
    }

    getDiameter(): number {
        return 2 * this.radius;
    }
}

// ‚úÖ LSP: Triangle - –∏—Å—Ç–∏–Ω–Ω—ã–π –ø–æ–¥—Ç–∏–ø Shape
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ –æ–±–µ—â–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Shape
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ú–æ–∂–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å –ª—é–±–æ–π –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ Shape
class Triangle implements Shape {
    constructor(private side1: number, private side2: number, private side3: number) {}

    getArea(): number {
        // –§–æ—Ä–º—É–ª–∞ –ì–µ—Ä–æ–Ω–∞ –¥–ª—è —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞
        const s = (this.side1 + this.side2 + this.side3) / 2;
        return Math.sqrt(s * (s - this.side1) * (s - this.side2) * (s - this.side3));
    }

    getPerimeter(): number {
        return this.side1 + this.side2 + this.side3;
    }

    // ‚úÖ LSP: –°—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É–µ—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É —Ñ–æ—Ä–º–∞—Ç–∞
    // üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –æ–∂–∏–¥–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    // üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    getInfo(): `${string}: Area=${string}, Perimeter=${string}` {
        return `Triangle: Area=${this.getArea().toFixed(2)}, Perimeter=${this.getPerimeter().toFixed(2)}`;
    }

    // ‚úÖ LSP: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –Ω–µ –Ω–∞—Ä—É—à–∞—é—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç
    // üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –†–∞—Å—à–∏—Ä—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏—è LSP
    // üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ì–∏–±–∫–æ—Å—Ç—å –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∏–Ω—Ü–∏–ø–∞ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏
    isEquilateral(): boolean {
        return this.side1 === this.side2 && this.side2 === this.side3;
    }
}

// ‚úÖ LSP: –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ –ø–æ–¥—Ç–∏–ø–∞–º–∏ Shape
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –ù–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø —Ñ–∏–≥—É—Ä—ã
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
function processShapes(shapes: Shape[]): {summaryArea: number, summaryPerimeter: number, summaryInfo: InfoType[]} {
    let summaryArea = 0;
    let summaryPerimeter = 0;
    let summaryInfo: InfoType[] = [];

    shapes.forEach((shape) => {
        summaryArea += shape.getArea();
        summaryPerimeter += shape.getPerimeter();
        summaryInfo.push(shape.getInfo());
    });

    return {
        summaryArea,
        summaryPerimeter,
        summaryInfo
    }
}

// ‚úÖ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–ï–ò–ú–£–©–ï–°–¢–í: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞
// üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: –õ—é–±–æ–π –ø–æ–¥–∫–ª–∞—Å—Å –º–æ–∂–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å
// üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
const rectangle = new Rectangle(4, 6);
const circle = new Circle(5);
const triangle = new Triangle(3, 4, 5);

processShapes([rectangle, circle, triangle]);